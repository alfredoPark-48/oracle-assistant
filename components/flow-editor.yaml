main: true
name: getcustomers
context:
  # Define the variables which will be used throughout the dialog flow here.
  # The syntax for defining the variables is variablename: "variableType".
  # The "variableType" can be defined as a primitive type ("string", "boolean", "int", "float", "double"), "list", "map" or an entity name. A variable can also hold the results returned by the Intent Engine. For these variables, the "variableType" must be "nlpresult" (for example, iResult: "nlpresult").
  # The variable 'rb' of type 'resourcebundle' is pre-defined, and can be used to resolve resource bundle entries in the language of the user: ${rb('rbKey','rbArg1', 'rbArg2')}
  variables:
    # greeting is a variable that references the Greeting composite bag entity.
    # This composite bag entity has items to prompt for greeting type and name
    greeting: "Greeting"
    iResult: "nlpresult"
# states is where you can define the various states within your flow.
# The syntax for defining a state is
# statename:
#   component:Specify the component you want to use. This can be either a built-in or custom component.
#   properties:
#     property1: "value" (These are the properties to the specified component
#   transitions: You can specify one of the following four
#     next: Specify the state you want to execute next after this state. By default it will execute the state specified after this
#     error: Specify the state you want to execute in case the component encounters any error in execution.
#     actions: You can handle various actions returned by the components here the syntax is actionName: "statename"
#        action1: state1
#     return: "done" You can exit the flow using the return statement
states:

  intent:
    component: System.Intent
    properties:
      variable: "iResult"
    transitions:
      # next transition is triggered when resolved intent name is not defined under transition actions
      next: "greeting"
      # You can add an intent action here
      # e.g. Intent1 : "startIntent1"
      actions:
        Greeting: greeting
        ListOfCustomers: listOfCustomers
        unresolvedIntent: unresolved

  greeting:
    # ResolveEntities component will prompt for all items defined in the Greeting composite bag entity
    component: System.Output
    properties:
      translate: false
      text: 'Greetings, customer!'
      keepTurn: false
      # variable: "greeting"
      # nlpResultVariable: "iResult"
      # useFullEntityMatches: true
      # cancelPolicy: "immediate"
    transitions:
      return: greeting
      # actions:
      #   cancel: "cancelGreeting"
      # next: "printGreeting"

  listOfCustomers:
    component: com.credit.oda
    properties:
      # metadata property specifies the structure of the bot response message(s) that are sent to the user. See the documentation of the System.CommonResponse component in the user's guide for more info on all the configuration options you can use within the metadata property.
      # metadata:
      #   responseItems:
      #     - type: "text"
      #       text: "${greeting.value.Type.value}  ${greeting.value.Name}"
    transitions:
      next: 'greeting'
      actions:
        success: successState
        failure: failureState
      # return: "done"

  successState:
    component: 'System.Output'
    properties:
      text: |-
        Success!
      keepTurn: false
    transitions:
      return: 'done'

  failureState:
    component: 'System.Output'
    properties:
      text: |-
        Failed! Check the logs.
      keepTurn: false
    transitions:
      return: 'done'

  unresolved:
    component: System.Output
    properties:
      translate: false
      text: "I don't understand. What do you want to do?"
      keepTurn: false
    transitions:
      return: unresolved